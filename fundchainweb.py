# -*- coding: utf-8 -*-
"""FundChainWeb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h9zF8lQIoLNLs2WHbssjZ8waFem44Vwr
"""

import streamlit as st
import pandas as pd
import plotly.express as px

# --- Configuraci√≥n inicial ---
st.set_page_config(page_title="FundChain | EU Dashboard", layout="wide")

# --- Estilos personalizados ---
st.markdown("""
<style>
body {
    background-color: #f5f5f5;
}
.title-text {
    font-size: 42px;
    font-weight: 800;
    color: #1a52a1;
    margin-bottom: 10px;
}
.subtitle-text {
    font-size: 20px;
    color: #555;
    margin-bottom: 30px;
}
.hero {
    background-color: #e6eefc;
    padding: 50px 40px;
    border-radius: 20px;
    margin-bottom: 40px;
}
.section-title {
    font-size: 28px;
    font-weight: bold;
    color: #1a52a1;
    margin-top: 40px;
}
.footer {
    margin-top: 60px;
    font-size: 13px;
    text-align: center;
    color: gray;
}
</style>
""", unsafe_allow_html=True)

# --- Header tipo hero ---
st.markdown("""
<div class='hero'>
    <div class='title-text'>üá™üá∫ FundChain</div>
    <div class='subtitle-text'>Making public funds truly public across the European Union.</div>
    <p style="font-size:16px;">An open and transparent platform for tracking EU-funded projects, blockchain-based disbursements, AI scoring, and automated oversight reports.</p>
</div>
""", unsafe_allow_html=True)

# --- KPIs destacados ---
col1, col2, col3, col4 = st.columns(4)
col1.metric("üß© Active Projects", "142", "+4.2%")
col2.metric("üí∞ Funds Allocated", "‚Ç¨463.8M", "+12.3%")
col3.metric("ü§ñ Avg. AI Score", "7.4 / 10", "+0.6")
col4.metric("üìÑ Pending Docs", "37", "+8")

# --- Filtros de proyecto ---
with st.expander("üîç Filter Projects"):
    country = st.selectbox("Country", ["All", "Greece", "Spain", "France"])
    status = st.selectbox("Status", ["All", "Active", "Completed", "Delayed"])
    search = st.text_input("Search by project name or code")

# --- Dataset de proyectos ---
df = pd.DataFrame([
    {"Project": "Athens Smart City", "Country": "Greece", "Funding": 4.2, "AI Score": 8.7, "Status": "Active", "Code": "GR-2023-SC097", "Last Update": "2 days ago"},
    {"Project": "Barcelona Energy Hub", "Country": "Spain", "Funding": 7.8, "AI Score": 6.4, "Status": "Delayed", "Code": "ES-2022-RE128", "Last Update": "5 days ago"},
    {"Project": "Paris Digital Infra", "Country": "France", "Funding": 3.5, "AI Score": 9.2, "Status": "Active", "Code": "FR-2023-DI104", "Last Update": "Today"},
    {"Project": "Thessaloniki Port", "Country": "Greece", "Funding": 12.1, "AI Score": 4.1, "Status": "Active", "Code": "GR-2021-PM053", "Last Update": "1 week ago"},
    {"Project": "Valencia Healthcare", "Country": "Spain", "Funding": 2.6, "AI Score": 8.9, "Status": "Completed", "Code": "ES-2021-HI076", "Last Update": "3 weeks ago"},
])

# --- Filtro aplicado ---
filtered_df = df.copy()
if country != "All":
    filtered_df = filtered_df[filtered_df["Country"] == country]
if status != "All":
    filtered_df = filtered_df[filtered_df["Status"] == status]
if search:
    filtered_df = filtered_df[filtered_df["Project"].str.contains(search, case=False) | filtered_df["Code"].str.contains(search, case=False)]

# --- Tabla de proyectos ---
st.markdown("<div class='section-title'>üìã Projects Overview</div>", unsafe_allow_html=True)
st.dataframe(filtered_df.set_index("Project")[["Country", "Funding", "AI Score", "Status", "Last Update"]])

# --- Transacciones blockchain ---
st.markdown("<div class='section-title'>üîó Blockchain Transactions</div>", unsafe_allow_html=True)
blockchain = pd.DataFrame([
    {"Type": "Send", "Project": "GR-2023-SC097", "Amount": "‚Ç¨850,000", "Time": "Today, 10:23 AM"},
    {"Type": "Receive", "Project": "ES-2022-RE128", "Amount": "‚Ç¨315,600", "Time": "Yesterday"},
    {"Type": "Send", "Project": "FR-2023-DI104", "Amount": "‚Ç¨750,000", "Time": "Mar 31"},
    {"Type": "Receive", "Project": "GR-2021-PM053", "Amount": "‚Ç¨425,800", "Time": "Mar 29"},
])
st.table(blockchain)

# --- Reportes automatizados ---
st.markdown("<div class='section-title'>üìÑ Automated Reports</div>", unsafe_allow_html=True)
with st.expander("Athens Smart City ‚Äì Apr 1, 2025"):
    st.write("Project is on schedule with 68% of milestones completed. Financial execution: 62%. All documents compliant.")
with st.expander("Barcelona Energy Hub ‚Äì Mar 30, 2025"):
    st.write("Solar panel delay. Missing permits. Needs local authority follow-up.")
with st.expander("Paris Digital Infra ‚Äì Mar 28, 2025"):
    st.write("10 days ahead of schedule. 92% budget efficiency.")
with st.expander("Thessaloniki Port ‚Äì Mar 25, 2025"):
    st.write("38% overspend in procurement. Urgent financial plan adjustment needed.")

# --- Gr√°fico de AI Scores ---
st.markdown("<div class='section-title'>üìà AI Score Trend</div>", unsafe_allow_html=True)
fig = px.line(
    x=["Jan", "Feb", "Mar", "Apr"],
    y=[6.8, 7.0, 7.2, 7.4],
    labels={"x": "Month", "y": "Avg. AI Score"},
    title=""
)
fig.update_layout(margin=dict(l=0, r=0, t=10, b=0))
st.plotly_chart(fig, use_container_width=True)

# --- Footer institucional ---
st.markdown("<div class='footer'>¬© 2025 FundChain ‚Ä¢ A project for EU transparency and innovation</div>", unsafe_allow_html=True)